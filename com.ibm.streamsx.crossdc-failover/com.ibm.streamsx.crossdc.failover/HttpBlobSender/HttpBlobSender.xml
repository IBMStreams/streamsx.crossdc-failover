<?xml version="1.0" encoding="UTF-8"?><operatorModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator" xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/operator operatorModel.xsd">
  <!--DO NOT EDIT THIS FILE - it is machine generated-->
  <javaOperatorModel>
    <!--Generated from com.ibm.streamsx.crossdc.failover.HttpBlobSender in impl/java/bin/com/ibm/streamsx/crossdc/failover/HttpBlobSender$StreamsModel.class at Sun Apr 21 15:27:31 EDT 2019-->
    <context>
      <description>Java Operator HttpBlobSender</description>
      <metrics/>
      <executionSettings>
        <className>com.ibm.streamsx.crossdc.failover.HttpBlobSender</className>
      </executionSettings>
      <libraryDependencies>
        <library>
          <cmn:description>Operator class library</cmn:description>
          <cmn:managedLibrary>
            <cmn:libPath>../../impl/java/bin</cmn:libPath>
          </cmn:managedLibrary>
        </library>
      </libraryDependencies>
    </context>
    <parameters>
      <parameter>
        <name>alwaysLogHttpErrors</name>
        <description>Specify whether to log the HTTP errors at all times.</description>
        <optional>true</optional>
        <type>boolean</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>binaryDataAttributeName</name>
        <description>Specify the attribute name that will carry the binary data.</description>
        <optional>false</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>httpConnectionTimeout</name>
        <description>Specify the HTTP connection timeout in number of seconds.</description>
        <optional>true</optional>
        <type>int32</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>httpReadTimeout</name>
        <description>Specify the HTTP read timeout in number of seconds.</description>
        <optional>true</optional>
        <type>int32</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>remoteHttpPort</name>
        <description>Specify the remote HTTP port where to connect and send data.</description>
        <optional>false</optional>
        <type>int32</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>remoteMachineNames</name>
        <description>Specify one or more remote machines or IP addresses inside a string with comma separators as needed.</description>
        <optional>false</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>remoteUrlPath</name>
        <description>Specify the URL path component of the remote machine's URL.</description>
        <optional>false</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>sendToAllRemoteMachines</name>
        <description>Specify whether to send the blob data to all the remote machines or only to the first successful machine that accepts the HTTP connection request.</description>
        <optional>true</optional>
        <type>boolean</type>
        <cardinality>1</cardinality>
      </parameter>
    </parameters>
    <inputPorts>
      <inputPortSet>
        <description>Port that ingests tuples</description>
        <windowingDescription/>
        <windowingMode>NonWindowed</windowingMode>
        <windowPunctuationInputMode>Oblivious</windowPunctuationInputMode>
        <controlPort>false</controlPort>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </inputPortSet>
      <inputPortOpenSet>
        <description>Optional input ports</description>
        <windowingDescription/>
        <windowingMode>NonWindowed</windowingMode>
        <windowPunctuationInputMode>Oblivious</windowPunctuationInputMode>
        <controlPort>false</controlPort>
      </inputPortOpenSet>
    </inputPorts>
    <outputPorts>
      <outputPortSet>
        <description>Port that produces tuples</description>
        <windowPunctuationOutputMode>Generating</windowPunctuationOutputMode>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </outputPortSet>
      <outputPortOpenSet>
        <description>Optional output ports</description>
        <windowPunctuationOutputMode>Generating</windowPunctuationOutputMode>
      </outputPortOpenSet>
    </outputPorts>
  </javaOperatorModel>
</operatorModel>